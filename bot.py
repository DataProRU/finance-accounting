import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from aiogram.filters import Command
from sqlalchemy import create_engine, Column, Integer, String, Boolean
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker

# –£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –æ—Ç BotFather
BOT_TOKEN = "7382155025:AAHDSIkwnZRKMq2waIBYAw1Z7QkhWjCnJOQ"
DATABASE_URL = "sqlite:///./eq_rental.db"

# URL –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
WEB_APP_URL = "https://garage-garageshop.amvera.io/tg_bot_add"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SQLAlchemy
Base = declarative_base()
engine = create_engine(DATABASE_URL)
Session = sessionmaker(bind=engine)
session = Session()


class TgUser(Base):
    __tablename__ = "tg_users"
    id = Column(Integer, primary_key=True, autoincrement=True)
    tg_username = Column(String, unique=True, nullable=False)
    username = Column(String, unique=True, nullable=False)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –Ω–∏–∫—É –≤ Telegram
async def get_user_by_tg_username(tg_username: str) -> str:
    user = session.query(TgUser).filter_by(tg_username=tg_username).first()
    print(f"User from DB: {user}")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    return user.username if user else None


@dp.message(Command("start"))
async def start_command_handler(message: types.Message):
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_nick = message.from_user.username

    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    user_name = await get_user_by_tg_username(user_nick)
    if user_name:
        user_nick = user_name
    else:
        user_nick = "–≥–æ—Å—Ç—å"

    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≥–æ—Å—Ç—å
    if user_nick != "–≥–æ—Å—Ç—å":
        web_app_url_with_params = f"{WEB_APP_URL}?username={user_nick}"
        print(f"Web App URL: {web_app_url_with_params}")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="–û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                        web_app=WebAppInfo(url=web_app_url_with_params)
                    )
                ]
            ]
        )
    else:
        keyboard = None

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≥–æ—Å—Ç—å
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {user_nick}! üëã\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞!",
        reply_markup=keyboard
    )


async def main():
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
